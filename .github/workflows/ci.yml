name: CI

on:
  workflow_dispatch:
    inputs:
      check_run_id:
        description: Check Run ID
        required: false

jobs:
  check-in:
    name: Check In
    runs-on: ubuntu-latest
    if: github.event.inputs.check_run_id

    steps:
      - name: Try cURL
        run: |
          curl -s 'https://api.github.com/users/lxbndr' | jq -r '.name'
  
      - name: Get Current Run (cURL)
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Get Current Run
        id: get-run
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repository}/actions/runs/{run_id}
          repository: ${{ github.repository }}
          run_id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CI Check
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repository}/check-runs/${{ github.event.inputs.check_run_id }}
          repository: ${{ github.repository }}
          status: in_progress
          details_url: ${{ fromJSON(steps.get-run.outputs.data).html_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [check-in]
    if: cancelled() == false
    steps:
      - name: Run a one-line script
        run: |
          echo "Working"
          sleep 5

      - name: Run a one-line script
        run: |
          echo "Working 2"
          sleep 5

      - name: Run a one-line script
        run: |
          echo "Working 3"
          sleep 5

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    if: cancelled() == false
    steps:
      - name: Run a one-line script
        run: |
          echo "Working"
          sleep 5

      - name: Run a one-line script
        run: |
          echo "Working 2"
          sleep 5

      - name: Run a one-line script
        run: |
          echo "Working 3"
          sleep 5
          exit 1

  check-out:
    name: Check Out
    runs-on: ubuntu-latest
    if: github.event.inputs.check-run-id && always()
    needs: [build, test]
    
    steps:
      - name: Print Job Status
        run: |
          echo "${{ needs.build.result }}"
          echo "${{ needs.test.result }}"

      - name: Update CI Check - Success
        uses: octokit/request-action@v2.x
        if: needs.test.result == 'success'
        with:
          route: PATCH /repos/{repository}/check-runs/${{ github.event.inputs.check-run-id }}
          repository: ${{ github.repository }}
          status: completed
          conclusion: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update CI Check - Failure
        if: needs.build.result == 'failure' || needs.test.result == 'failure'
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repository}/check-runs/${{ github.event.inputs.check-run-id }}
          repository: ${{ github.repository }}
          status: completed
          conclusion: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update CI Check - Cancelled
        if: needs.build.result == 'cancelled' || needs.test.result == 'cancelled'
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repository}/check-runs/${{ github.event.inputs.check-run-id }}
          repository: ${{ github.repository }}
          status: completed
          conclusion: cancelled
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
