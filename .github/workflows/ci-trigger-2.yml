name: CI Trigger 2

on:
  issue_comment:
    types: [created]

env:
  WORKFLOW_DATA: |
    {
      "icu" : { "check_name": "icu", "workflow_id": "icu.yml" },
      "curl" : { "check_name": "curl", "workflow_id": "curl.yml" },
      "libxml2" : { "check_name": "libxml2", "workflow_id": "libxml2.yml" },
      "zlib" : { "check_name": "zlib", "workflow_id": "zlib.yml" },
      "swift-5.3" : { "check_name": "swift-5.3", "workflow_id": "swift-snapshot.yml", "workflow_inputs": ", \"branch-spec\":\"5.3\""},
      "swift-5.4" : { "check_name": "swift-5.4", "workflow_id": "swift-snapshot.yml" },
      "swift-5.5" : { "check_name": "swift-5.5", "workflow_id": "swift-snapshot.yml" },
      "swift-main" : { "check_name": "swift-main", "workflow_id": "swift-snapshot.yml" }
    }

jobs:
  set-matrix:
    name: Set Matrix

    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/ci ')

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Print Debug Info
        run: echo "${{ github.event.comment.author_association }}"

      - name: Set Matrix
        id: set-matrix
        env:
          AUTHOR_ASSOCIATION: ${{ github.event.comment.author_association }}
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          set -x
          
          if [ "$AUTHOR_ASSOCIATION" != "COLLABORATOR" ] && [ "$AUTHOR_ASSOCIATION" != "OWNER" ]; then
            echo "::error::Only collaborators or owner could request this action"
            exit 1
          fi
          
          declare -a MATRIX=()
          for COMMENT_TOKEN in $COMMENT_BODY; do
            case "$COMMENT_TOKEN" in
              
              swift-5.3 | swift-5.4 | swift-5.5 | swift-main | icu | curl | libxml2 | zlib)
                MATRIX+=("\"$COMMENT_TOKEN\"")
                ;;
              
              swift-all)
                MATRIX+=("\"swift-5.3\"" "\"swift-5.4\"" "\"swift-5.5\"" "\"swift-main\"")
                ;;
              
              /ci | test)
                ;;
              
              *)
                echo "::warning::Unknown token: $COMMENT_TOKEN"
                ;;
              
            esac
          done
          
          MATRIX=$(echo ${MATRIX[@]} | tr ' ' ',')
          echo $MATRIX
          echo "::set-output name=matrix::{\"workflow\":[$MATRIX]}"

  trigger-workflow:
    name: Trigger Workflow

    runs-on: ubuntu-latest
    needs: [set-matrix]

    strategy:
      fail-fast: false
      matrix:
        ${{ fromJSON(needs.set-matrix.outputs.matrix) }}

    steps:
      - name: Print Debug Info
        run: |
          echo "${{ toJSON(matrix) }}"
          
      - name: Fetch Pull Request Info
        id: get_pr
        run: |
          set -e
          
          http_code=$(curl -s -o pr.json -w "%{http_code}" -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          
          if [ "$http_code" != "201" ]; then
            echo "::error::Failed to fetch PR ${{ github.event.issue.number }}"
            exit 1
          fi
          
          HEAD_SHA=$(jq -r '.head.sha' pr.json)
          HEAD_REF=$(jq -r '.head.ref' pr.json)
          
          echo "::set-output name=head_sha::$HEAD_SHA"
          echo "::set-output name=head_ref::$HEAD_REF"

      - name: Create Check
        id: create_check
        run: |
          CHECK_RUN_ID=$(curl -s -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            -X POST https://api.github.com/repos/${{ github.repository }}/check-runs \
            -d '{"name":"${{ fromJSON(env.WORKFLOW_DATA)[matrix.workflow].check_name }}","head_sha":"${{ steps.get_pr.outputs.head_sha }}"}' \
            | jq -r '.id') \
            && echo "::set-output name=check_run_id::$CHECK_RUN_ID"

      - name: Trigger Workflow
        run: |
          curl -s -H 'Authorization: token ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ fromJSON(env.WORKFLOW_DATA)[matrix.workflow].workflow_id }}/dispatches \
            -d '{"ref":"${{ steps.get_pr.outputs.head_ref }}","inputs":{"check_run_id":"${{ steps.create_check.outputs.check_run_id }}"${{ fromJSON(env.WORKFLOW_DATA)[matrix.workflow].workflow_inputs }}}}'

